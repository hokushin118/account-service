name: Continuous Integration (CI)
on:
  # Trigger the workflow manually,
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    services:
      postgres:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: pa$$wOrd123!
          POSTGRES_DB: account_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel --no-cache-dir 
          pip install --no-cache-dir -r requirements.txt 

      - name: Lint with flake8
        run: |
          flake8 service --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 service --count --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Migrations
        run: flask db-upgrade
        env:
          DATABASE_URI: 'postgresql://postgres:pa$$wOrd123!@postgres:5432/account_db'

      - name: Run unit tests with nose
        run: nosetests -v --with-spec --spec-color tests/unit

      - name: Run integration tests with nose
        run: nosetests -v --with-spec --spec-color tests/integration
        env:
          DATABASE_URI: 'postgresql://postgres:pa$$wOrd123!@postgres:5432/account_db'
          CACHE_REDIS_HOST: 'redis'
          CACHE_REDIS_PORT: '6379'
          CACHE_REDIS_DB: '0'
          SWAGGER_ENABLED: False
          AUDIT_ENABLED: False
          RUN_INTEGRATION_TESTS: True
